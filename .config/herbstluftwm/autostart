#!/usr/bin/env bash

#########################################################################################################
#
#
#   ██╗  ██╗███████╗██████╗ ██████╗ ███████╗████████╗██╗     ██╗   ██╗███████╗████████╗██╗    ██╗███╗   ███╗
#   ██║  ██║██╔════╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝██║     ██║   ██║██╔════╝╚══██╔══╝██║    ██║████╗ ████║
#   ███████║█████╗  ██████╔╝██████╔╝███████╗   ██║   ██║     ██║   ██║█████╗     ██║   ██║ █╗ ██║██╔████╔██║
#   ██╔══██║██╔══╝  ██╔══██╗██╔══██╗╚════██║   ██║   ██║     ██║   ██║██╔══╝     ██║   ██║███╗██║██║╚██╔╝██║
#   ██║  ██║███████╗██║  ██║██████╔╝███████║   ██║   ███████╗╚██████╔╝██║        ██║   ╚███╔███╔╝██║ ╚═╝ ██║
#   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝   ╚═╝   ╚══════╝ ╚═════╝ ╚═╝        ╚═╝    ╚══╝╚══╝ ╚═╝     ╚═╝
#
#
#   configuration file for HLWM
#
#
#########################################################################################################

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

picom &

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier
myTerm=alacritty
myBrowser=firefox

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
#hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-Return spawn $myTerm

# Dmenu launcher
hc keybind $Mod-Shift-Return spawn dmenu_run
# Firefox launcher
hc keybind $Mod-Shift-i spawn $myBrowser
# Pavucontrol
hc keybind $Mod-Shift-s spawn pavucontrol

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u     	split  	bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
#tag_names=( "<dev>:research" "<dev>:coding" "<dev>:extra" "<st>:research" "<st>:coding" "<st>:courses" "gaming" "www" "general" )
tag_names=( "<dev>:research" "<dev>:coding" "<dev>:extra" "gaming" "www" "general" )
tag_keys=( {1..3} {7..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

hc keybind "$Mod-KP_End" use_index "0"
hc keybind "$Mod-KP_Down" use_index "1"
hc keybind "$Mod-KP_Next" use_index "2"
hc keybind "$Mod-KP_Home" use_index "3"
hc keybind "$Mod-KP_Up" use_index "4"
hc keybind "$Mod-KP_Prior" use_index "5"

hc keybind "$Mod-Shift-KP_End" move_index "0"
hc keybind "$Mod-Shift-KP_Down" move_index "1"
hc keybind "$Mod-Shift-KP_Next" move_index "2"
hc keybind "$Mod-Shift-KP_Home" move_index "3"
hc keybind "$Mod-Shift-KP_Up" move_index "4"
hc keybind "$Mod-Shift-KP_Prior" move_index "5"

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1
hc keybind $Mod-g set_layout grid

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
#hc set frame_bg_normal_color '#565656'
hc set frame_bg_normal_color '#222745'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 4

hc attr theme.active.color '#FA2CED'
#hc attr theme.active.color '#ce5e82'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
#hc attr theme.background_color '#141414'
hc attr theme.background_color '#222629'

hc set window_gap 8
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0
hc set focus_follows_mouse on

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors
#if type "xrandr"; then
#    for monitor in $( xrandr --query | grep " connected" | awk '{print $1}' ); do
#        xrandr --output eDP1 --mode 1600x900 &&\
#        xrandr --output HDMI1 --auto --mode 2560x1080 --right-of eDP1 &&\
#        xrandr --output DP2 --auto --mode 1280x1024 --right-of HDMI1 &&\
#        hc detect_monitors &&\
#        nitrogen --restore &
#    done
#fi

xrandr --output eDP1 --auto--mode 1600x900;
xrandr --output HDMI1 --auto --mode 2560x1080 --right-of eDP1;
xrandr --output DP2 --auto --mode 1280x1024 --right-of HDMI1;

nitrogen --restore &

#hc set_monitors 1600x880+0+20 2560x1060+1600+20 1280x1004+4160+20;
#hc set_monitors 1600x900+0+0 2560x1080+1600+0 1280x1024+4160+0;

hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
